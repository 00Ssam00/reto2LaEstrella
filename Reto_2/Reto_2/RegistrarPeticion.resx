<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>